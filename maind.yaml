openapi: 3.1.0
info:
  title: Meta Marketing API
  description: |
    Meta Marketing API for campaign management and insights.
    Rate limits and best practices are enforced.

    # Authentication Flow
    1. User Bearer Token:
       - Stored in connector configuration
       - Required permissions:
         * pages_show_list (for page discovery)
         * pages_read_engagement (for metrics and insights)
         * ads_management (for campaign access)
         * ads_read (for insights)
         * read_insights (for detailed metrics)
         * attribution_read (for conversion data)
       - Token Refresh:
         * On error 190 (expired token)
         * On error 200 (permission error)
         * On error 10 (app configuration)

    2. Resource Discovery:
       a. Page Access:
          - Call /me/accounts with pages_show_list
          - Select page with ID 102264027940184
          - Use pages_read_engagement for:
            * Page metrics
            * Post insights
            * Engagement data
          - Use read_insights for:
            * Detailed analytics
            * Custom metrics
            * Historical data
          - Cache Strategy:
            * Page data: 24 hours
            * Insights: 1 hour
            * Engagement: 5 minutes

       b. Ad Account:
          - Use account ID 906594379912215
          - Use ads_management for:
            * Campaign access
            * Ad set management
            * Creative control
          - Use attribution_read for:
            * Conversion data
            * Attribution windows
            * Custom events
          - Cache Strategy:
            * Account data: 24 hours
            * Campaign list: 1 hour
            * Insights: 5 minutes

    3. Cache Management:
       - Hierarchical Cache:
         * Level 1: Basic info (24h)
         * Level 2: Lists and metrics (1h)
         * Level 3: Real-time data (5m)
       - Auto-refresh before expiry
       - Stale-while-revalidate
       - Error fallback to cache

    4. Error Handling:
       - Automatic retry on token errors
       - Permission verification
       - Rate limit backoff
       - Detailed error messages

  version: '22.0'
  x-connector-config:
    page-id: "102264027940184"
    ad-account-id: "906594379912215"
    required-permissions:
      - pages_show_list
      - pages_read_engagement
      - ads_management
      - ads_read
      - read_insights
      - attribution_read
    error-retry:
      max-attempts: 3
      backoff-ms: 1000
      errors:
        - code: 190
          action: refresh_token
        - code: 200
          action: verify_permissions
        - code: 10
          action: verify_app_config
    cache-config:
      page-info:
        duration: 86400        # 24 hours
        refresh-before: 3600   # 1 hour before
        stale-while-revalidate: true
        fields:
          basic:               # Level 1 (24h)
            - id
            - name
            - category
            - tasks
          metrics:            # Level 2 (1h)
            - engagement
            - posts
            - insights
          real-time:         # Level 3 (5m)
            - feed
            - comments
            - reactions
      account-info:
        duration: 86400        # 24 hours
        refresh-before: 3600   # 1 hour before
        stale-while-revalidate: true
        fields:
          basic:               # Level 1 (24h)
            - account_id
            - name
            - status
            - currency
            - timezone
          metrics:            # Level 2 (1h)
            - insights
            - campaigns
            - adsets
          real-time:         # Level 3 (5m)
            - spend
            - actions
            - conversions
  x-rate-limiting:
    standard-tier:
      points: 9000
      window: 300
      block: 60
    development-tier:
      points: 60
      window: 300
      block: 300
  x-performance:
    cache-ttl:
      level1: 86400          # 24 hours
      level2: 3600           # 1 hour
      level3: 300            # 5 minutes
    timeout:
      sync: 30
      async: 3600
    compression: true
    batch-size: 100

servers:
  - url: https://graph.facebook.com/v22.0
    description: Meta Graph API v22.0

security:
  - bearerAuth: []

paths:
  /me/accounts:
    get:
      operationId: getPageAccounts
      summary: Get page accounts
      description: |
        List available pages with engagement metrics.
        Called internally to get page ID 102264027940184.
        Required permissions: pages_show_list, pages_read_engagement
      tags:
        - Authentication
      security:
        - bearerAuth: []
      parameters:
        - name: fields
          in: query
          required: true
          description: Fields to return
          schema:
            type: string
            default: "id,name,category,category_list,tasks,engagement{count_lifetime},posts.limit(1){insights},feed{likes,comments}"
      responses:
        '200':
          description: Success. Returns page list with metrics
          headers:
            X-Business-Use-Case-Usage:
              $ref: "#/components/headers/BusinessUseCaseUsage"
            X-Rate-Limit-Reset:
              $ref: "#/components/headers/RateLimitReset"
            Cache-Control:
              schema:
                type: string
                default: "private, max-age=86400"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageAccountList"
              example:
                data:
                  - id: "102264027940184"
                    name: "Test Page"
                    category: "Business"
                    category_list: [
                      {
                        "id": "2500",
                        "name": "Business Service"
                      }
                    ]
                    tasks: [
                      "CREATE_CONTENT",
                      "MODERATE",
                      "READ_INSIGHTS"
                    ]
                    engagement: {
                      "count_lifetime": 1234
                    }
                    posts: {
                      "data": [
                        {
                          "id": "102264027940184_123456789",
                          "insights": {
                            "data": [
                              {
                                "name": "post_impressions",
                                "period": "lifetime",
                                "values": [{"value": 5678}]
                              }
                            ]
                          }
                        }
                      ]
                    }
                    feed: {
                      "data": [
                        {
                          "likes": {"summary": {"total_count": 42}},
                          "comments": {"summary": {"total_count": 7}}
                        }
                      ]
                    }
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '429':
          $ref: "#/components/responses/RateLimitExceeded"

  /act_{account_id}/campaigns:
    get:
      operationId: getCampaigns
      summary: List campaigns
      description: |
        Get a list of all campaigns for ad account 906594379912215.
        Required permissions: ads_management
        Note: Use account_id without 'act_' prefix, it will be added automatically in the URL
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: account_id
          in: path
          required: true
          description: Ad account ID (without 'act_' prefix, it will be added automatically)
          schema:
            type: string
            pattern: '^\d+$'
            example: "906594379912215"
        - name: fields
          in: query
          required: true
          description: Comma-separated list of fields to return
          schema:
            type: string
            default: "id,name,status,objective"
        - name: limit
          in: query
          description: Number of records to return per request
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
        - name: after
          in: query
          description: Cursor for pagination
          schema:
            type: string
      responses:
        '200':
          description: Success. Returns a list of campaigns
          headers:
            X-Business-Use-Case-Usage:
              $ref: "#/components/headers/BusinessUseCaseUsage"
            X-Rate-Limit-Reset:
              $ref: "#/components/headers/RateLimitReset"
            Cache-Control:
              $ref: "#/components/headers/CacheControl"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CampaignList"
              example:
                data:
                  - id: "23847392874"
                    name: "Website Traffic Campaign"
                    status: "ACTIVE"
                    objective: "LINK_CLICKS"
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '429':
          $ref: "#/components/responses/RateLimitExceeded"

  /act_{account_id}/campaigns/{campaign_id}:
    get:
      operationId: getCampaignById
      summary: Get campaign details
      description: |
        Get detailed information about a specific campaign.
        Required permissions: ads_management
        Note: Use campaign_id without account prefix
      tags:
        - Campaigns
      security:
        - bearerAuth: []
      parameters:
        - name: account_id
          in: path
          required: true
          description: Ad account ID (without 'act_' prefix, it will be added automatically)
          schema:
            type: string
            pattern: '^\d+$'
            example: "906594379912215"
        - name: campaign_id
          in: path
          required: true
          description: Campaign ID (without account prefix)
          schema:
            type: string
            pattern: '^\d+$'
            example: "23847392874"
        - name: fields
          in: query
          required: true
          description: Comma-separated list of fields to return
          schema:
            type: string
            default: "id,name,status,objective,daily_budget,lifetime_budget,bid_strategy"
      responses:
        '200':
          description: Success. Returns detailed campaign information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
              example:
                id: "23847392874"
                name: "Website Traffic Campaign"
                status: "ACTIVE"
                objective: "LINK_CLICKS"
                daily_budget: 5000
                lifetime_budget: 50000
                bid_strategy: "LOWEST_COST_WITH_BID_CAP"
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '429':
          $ref: "#/components/responses/RateLimitExceeded"

  /act_{account_id}/campaigns/{campaign_id}/insights:
    get:
      operationId: getCampaignInsights
      summary: Get campaign insights
      description: |
        Get performance metrics for a specific campaign.
        Required permissions: ads_read
        Note: Use campaign_id without account prefix
      tags:
        - Insights
      security:
        - bearerAuth: []
      parameters:
        - name: account_id
          in: path
          required: true
          description: Ad account ID (without 'act_' prefix, it will be added automatically)
          schema:
            type: string
            pattern: '^\d+$'
            example: "906594379912215"
        - name: campaign_id
          in: path
          required: true
          description: Campaign ID (without account prefix)
          schema:
            type: string
            pattern: '^\d+$'
            example: "23847392874"
        - name: fields
          in: query
          required: true
          description: List of metrics to return
          schema:
            type: array
            items:
              type: string
              enum:
                - impressions
                - reach
                - spend
                - inline_post_engagement
                - video_p25_watched_actions
                - video_p50_watched_actions
                - video_p75_watched_actions
                - video_p95_watched_actions
                - video_avg_time_watched_actions
            default:
              - impressions
              - reach
              - spend
        - name: date_preset
          in: query
          description: Predefined date range for the report
          schema:
            type: string
            enum:
              - today
              - yesterday
              - this_month
              - last_month
              - this_quarter
              - lifetime
            default: "last_month"
        - name: time_increment
          in: query
          description: Group results by N days
          schema:
            type: integer
            enum: [1, 7, 28]
            default: 1
      responses:
        '200':
          description: Success. Returns campaign performance metrics
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsightsResponse"
              example:
                data:
                  - date_start: "2025-03-01"
                    date_end: "2025-03-01"
                    campaign_id: "23847392874"
                    impressions: 1234
                    reach: 987
                    spend: 50.25
        '400':
          $ref: "#/components/responses/BadRequest"
        '401':
          $ref: "#/components/responses/Unauthorized"
        '429':
          $ref: "#/components/responses/RateLimitExceeded"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        User access token stored in connector.
        Required permissions:
        - pages_show_list (for page discovery)
        - pages_read_engagement (for metrics and insights)
        - ads_management (for campaign access)
        - ads_read (for insights)
        - business_management (for account access)
        - read_insights (for detailed metrics)
        - attribution_read (for conversion data)

  headers:
    BusinessUseCaseUsage:
      description: Business use case usage information
      schema:
        type: string
    RateLimitReset:
      description: Time until rate limit reset in seconds
      schema:
        type: integer
    CacheControl:
      description: Cache control directives
      schema:
        type: string

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  type:
                    type: string
                    description: Error type
                  code:
                    type: integer
                    description: Error code
                  fbtrace_id:
                    type: string
                    description: Facebook trace ID
            example:
              error:
                message: "Invalid OAuth access token."
                type: "OAuthException"
                code: 190
                fbtrace_id: "AbCdEf123456"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  type:
                    type: string
                    description: Error type
                  code:
                    type: integer
                    description: Error code
                  fbtrace_id:
                    type: string
                    description: Facebook trace ID
            example:
              error:
                message: "Error validating access token"
                type: "OAuthException"
                code: 190
                fbtrace_id: "AbCdEf123456"

    RateLimitExceeded:
      description: Rate limit exceeded
      headers:
        X-Business-Use-Case-Usage:
          $ref: "#/components/headers/BusinessUseCaseUsage"
        X-Rate-Limit-Reset:
          $ref: "#/components/headers/RateLimitReset"
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  message:
                    type: string
                    description: Error message
                  type:
                    type: string
                    description: Error type
                  code:
                    type: integer
                    description: Error code
                  fbtrace_id:
                    type: string
                    description: Facebook trace ID
            example:
              error:
                message: "Application request limit reached"
                type: "OAuthException"
                code: 4
                fbtrace_id: "AbCdEf123456"

  schemas:
    Error:
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: integer
            message:
              type: string
            type:
              type: string
    PageToken:
      type: object
      properties:
        access_token:
          type: string
          description: Page access token
    Campaign:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        status:
          type: string
          enum: [ACTIVE, PAUSED, DELETED]
        objective:
          type: string
          enum: [LINK_CLICKS, POST_ENGAGEMENT, VIDEO_VIEWS]
    CampaignList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Campaign"
        paging:
          type: object
          properties:
            cursors:
              type: object
              properties:
                before:
                  type: string
                after:
                  type: string
    InsightsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              impressions:
                type: integer
              reach:
                type: integer
              spend:
                type: number
              inline_post_engagement:
                type: integer
              video_p25_watched_actions:
                type: integer
              video_p50_watched_actions:
                type: integer
              video_p75_watched_actions:
                type: integer
              video_p95_watched_actions:
                type: integer
              video_avg_time_watched_actions:
                type: number
    AdAccountList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/AdAccount"
        paging:
          type: object
          properties:
            cursors:
              type: object
              properties:
                before:
                  type: string
                after:
                  type: string
    AdAccount:
      type: object
      properties:
        account_id:
          type: string
          description: Ad account ID
          example: "906594379912215"
        name:
          type: string
          description: Ad account name
          example: "Main Ad Account"
        account_status:
          type: string
          description: Account status
          enum: [ACTIVE, DISABLED, UNSETTLED, PENDING_RISK_REVIEW, PENDING_SETTLEMENT, IN_GRACE_PERIOD, PENDING_CLOSURE, CLOSED, ANY_ACTIVE, ANY_CLOSED]
          example: "ACTIVE"
        business_name:
          type: string
          description: Business name
          example: "My Business"
        currency:
          type: string
          description: Account currency
          example: "USD"
    PageAccountList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/PageAccount"
        paging:
          $ref: "#/components/schemas/Paging"
    PageAccount:
      type: object
      properties:
        id:
          type: string
          description: Page ID
          example: "102264027940184"
        name:
          type: string
          description: Page name
          example: "Test Page"
        access_token:
          type: string
          description: Page access token
          example: "EAAJKpXyZB8i0BADHkZAkHrZBTZAZAQZDZD"
    Paging:
      type: object
      properties:
        cursors:
          type: object
          properties:
            before:
              type: string
              example: "MAZDZD"
            after:
              type: string
              example: "MQZDZD"
    BusinessList:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/Business"
        paging:
          $ref: "#/components/schemas/Paging"
    Business:
      type: object
      properties:
        id:
          type: string
          description: Business ID
          example: "123456789"
        name:
          type: string
          description: Business name
          example: "Main Business"
        verification_status:
          type: string
          description: Verification status
          example: "verified"
        is_disabled:
          type: boolean
          description: Is disabled
          example: false
